version: 2.1
commands:
  print_pipeline_id:
    description: to print CIRCLE CI Workflow ID from environment variable
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>


jobs:
  test_catch:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 0    # exit 1 to fail ; 0 to pass 
      - run:
          name: Failed test
          command: echo "IT failed!!!"
          when: on_fail   
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: echo "Hello There"
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "Hello World"
      - run:
          name: "Testing ENv Variables"
          command: echo ${MY_PROJ_NAME}
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: mkdir /tmp/vvk_wrksp
      - run: echo "Hi We are updating file from job 1" > /tmp/vvk_wrksp/output.txt
      - print_pipeline_id:
          id: << pipeline.id >>
      - persist_to_workspace:
          root: /tmp/vvk_wrksp
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: /tmp/vvk_wrksp
      - run: cat /tmp/vvk_wrksp/output.txt
    
# Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi


workflows:
  failtest:
    jobs:
      - test_catch
  welcome:
    jobs:
      - print_hello
      - print_world:
          requires:
            - print_hello
  fileshare:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
            
  smoke:
    jobs:
      - smoke_test
